[{"name":"abstract fun <K : Any, V : Any> write(entry: Map.Entry<K, V>)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun <K : Any, V : Any> write(entry: Map.Entry<K, V>)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun <K : Any, V : Any> write(map: Map<K, V>)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun <K : Any, V : Any> write(map: Map<K, V>)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun <T : Any> write(array: Array<out T>)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun <T : Any> write(array: Array<out T>)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun <T : Any> write(iter: Iterable<T>)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun <T : Any> write(iter: Iterable<T>)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun <T : Any> write(list: List<T>)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun <T : Any> write(list: List<T>)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun <T : Any> write(pair: Pair<T, T>)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun <T : Any> write(pair: Pair<T, T>)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun <T : Any> write(triple: Triple<T, T, T>)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun <T : Any> write(triple: Triple<T, T, T>)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun <T> read(): T","description":"io.github.aeckar.hass.Deserializer.read","location":"hass/io.github.aeckar.hass/-deserializer/read.html","searchKeys":["read","abstract fun <T> read(): T","io.github.aeckar.hass.Deserializer.read"]},{"name":"abstract fun ObjectDeserializer.readOperation(): T","description":"io.github.aeckar.hass.ReadOperation.readOperation","location":"hass/io.github.aeckar.hass/-read-operation/read-operation.html","searchKeys":["readOperation","abstract fun ObjectDeserializer.readOperation(): T","io.github.aeckar.hass.ReadOperation.readOperation"]},{"name":"abstract fun Serializer.writeOperation(obj: T)","description":"io.github.aeckar.hass.WriteOperation.writeOperation","location":"hass/io.github.aeckar.hass/-write-operation/write-operation.html","searchKeys":["writeOperation","abstract fun Serializer.writeOperation(obj: T)","io.github.aeckar.hass.WriteOperation.writeOperation"]},{"name":"abstract fun readBoolean(): Boolean","description":"io.github.aeckar.hass.Deserializer.readBoolean","location":"hass/io.github.aeckar.hass/-deserializer/read-boolean.html","searchKeys":["readBoolean","abstract fun readBoolean(): Boolean","io.github.aeckar.hass.Deserializer.readBoolean"]},{"name":"abstract fun readByte(): Byte","description":"io.github.aeckar.hass.Deserializer.readByte","location":"hass/io.github.aeckar.hass/-deserializer/read-byte.html","searchKeys":["readByte","abstract fun readByte(): Byte","io.github.aeckar.hass.Deserializer.readByte"]},{"name":"abstract fun readChar(): Char","description":"io.github.aeckar.hass.Deserializer.readChar","location":"hass/io.github.aeckar.hass/-deserializer/read-char.html","searchKeys":["readChar","abstract fun readChar(): Char","io.github.aeckar.hass.Deserializer.readChar"]},{"name":"abstract fun readDouble(): Double","description":"io.github.aeckar.hass.Deserializer.readDouble","location":"hass/io.github.aeckar.hass/-deserializer/read-double.html","searchKeys":["readDouble","abstract fun readDouble(): Double","io.github.aeckar.hass.Deserializer.readDouble"]},{"name":"abstract fun readFloat(): Float","description":"io.github.aeckar.hass.Deserializer.readFloat","location":"hass/io.github.aeckar.hass/-deserializer/read-float.html","searchKeys":["readFloat","abstract fun readFloat(): Float","io.github.aeckar.hass.Deserializer.readFloat"]},{"name":"abstract fun readInt(): Int","description":"io.github.aeckar.hass.Deserializer.readInt","location":"hass/io.github.aeckar.hass/-deserializer/read-int.html","searchKeys":["readInt","abstract fun readInt(): Int","io.github.aeckar.hass.Deserializer.readInt"]},{"name":"abstract fun readLong(): Long","description":"io.github.aeckar.hass.Deserializer.readLong","location":"hass/io.github.aeckar.hass/-deserializer/read-long.html","searchKeys":["readLong","abstract fun readLong(): Long","io.github.aeckar.hass.Deserializer.readLong"]},{"name":"abstract fun readShort(): Short","description":"io.github.aeckar.hass.Deserializer.readShort","location":"hass/io.github.aeckar.hass/-deserializer/read-short.html","searchKeys":["readShort","abstract fun readShort(): Short","io.github.aeckar.hass.Deserializer.readShort"]},{"name":"abstract fun write(obj: Any?)","description":"io.github.aeckar.hass.Serializer.write","location":"hass/io.github.aeckar.hass/-serializer/write.html","searchKeys":["write","abstract fun write(obj: Any?)","io.github.aeckar.hass.Serializer.write"]},{"name":"abstract fun writeBoolean(cond: Boolean)","description":"io.github.aeckar.hass.Serializer.writeBoolean","location":"hass/io.github.aeckar.hass/-serializer/write-boolean.html","searchKeys":["writeBoolean","abstract fun writeBoolean(cond: Boolean)","io.github.aeckar.hass.Serializer.writeBoolean"]},{"name":"abstract fun writeByte(b: Byte)","description":"io.github.aeckar.hass.Serializer.writeByte","location":"hass/io.github.aeckar.hass/-serializer/write-byte.html","searchKeys":["writeByte","abstract fun writeByte(b: Byte)","io.github.aeckar.hass.Serializer.writeByte"]},{"name":"abstract fun writeChar(c: Char)","description":"io.github.aeckar.hass.Serializer.writeChar","location":"hass/io.github.aeckar.hass/-serializer/write-char.html","searchKeys":["writeChar","abstract fun writeChar(c: Char)","io.github.aeckar.hass.Serializer.writeChar"]},{"name":"abstract fun writeDouble(n: Double)","description":"io.github.aeckar.hass.Serializer.writeDouble","location":"hass/io.github.aeckar.hass/-serializer/write-double.html","searchKeys":["writeDouble","abstract fun writeDouble(n: Double)","io.github.aeckar.hass.Serializer.writeDouble"]},{"name":"abstract fun writeFloat(n: Float)","description":"io.github.aeckar.hass.Serializer.writeFloat","location":"hass/io.github.aeckar.hass/-serializer/write-float.html","searchKeys":["writeFloat","abstract fun writeFloat(n: Float)","io.github.aeckar.hass.Serializer.writeFloat"]},{"name":"abstract fun writeInt(n: Int)","description":"io.github.aeckar.hass.Serializer.writeInt","location":"hass/io.github.aeckar.hass/-serializer/write-int.html","searchKeys":["writeInt","abstract fun writeInt(n: Int)","io.github.aeckar.hass.Serializer.writeInt"]},{"name":"abstract fun writeLong(n: Long)","description":"io.github.aeckar.hass.Serializer.writeLong","location":"hass/io.github.aeckar.hass/-serializer/write-long.html","searchKeys":["writeLong","abstract fun writeLong(n: Long)","io.github.aeckar.hass.Serializer.writeLong"]},{"name":"abstract fun writeShort(n: Short)","description":"io.github.aeckar.hass.Serializer.writeShort","location":"hass/io.github.aeckar.hass/-serializer/write-short.html","searchKeys":["writeShort","abstract fun writeShort(n: Short)","io.github.aeckar.hass.Serializer.writeShort"]},{"name":"annotation class Container","description":"io.github.aeckar.hass.Container","location":"hass/io.github.aeckar.hass/-container/index.html","searchKeys":["Container","annotation class Container","io.github.aeckar.hass.Container"]},{"name":"class InputDeserializer : CollectionDeserializer, Deserializer, Closeable","description":"io.github.aeckar.hass.InputDeserializer","location":"hass/io.github.aeckar.hass/-input-deserializer/index.html","searchKeys":["InputDeserializer","class InputDeserializer : CollectionDeserializer, Deserializer, Closeable","io.github.aeckar.hass.InputDeserializer"]},{"name":"class MalformedContainerException : Exception","description":"io.github.aeckar.hass.MalformedContainerException","location":"hass/io.github.aeckar.hass/-malformed-container-exception/index.html","searchKeys":["MalformedContainerException","class MalformedContainerException : Exception","io.github.aeckar.hass.MalformedContainerException"]},{"name":"class MalformedProtocolException : Exception","description":"io.github.aeckar.hass.MalformedProtocolException","location":"hass/io.github.aeckar.hass/-malformed-protocol-exception/index.html","searchKeys":["MalformedProtocolException","class MalformedProtocolException : Exception","io.github.aeckar.hass.MalformedProtocolException"]},{"name":"class MissingOperationException : IOException","description":"io.github.aeckar.hass.MissingOperationException","location":"hass/io.github.aeckar.hass/-missing-operation-exception/index.html","searchKeys":["MissingOperationException","class MissingOperationException : IOException","io.github.aeckar.hass.MissingOperationException"]},{"name":"class ObjectDeserializer : CollectionDeserializer, Deserializer","description":"io.github.aeckar.hass.ObjectDeserializer","location":"hass/io.github.aeckar.hass/-object-deserializer/index.html","searchKeys":["ObjectDeserializer","class ObjectDeserializer : CollectionDeserializer, Deserializer","io.github.aeckar.hass.ObjectDeserializer"]},{"name":"class ObjectMismatchException : TypeCastException","description":"io.github.aeckar.hass.ObjectMismatchException","location":"hass/io.github.aeckar.hass/-object-mismatch-exception/index.html","searchKeys":["ObjectMismatchException","class ObjectMismatchException : TypeCastException","io.github.aeckar.hass.ObjectMismatchException"]},{"name":"class OutputSerializer : Serializer, Closeable, Flushable","description":"io.github.aeckar.hass.OutputSerializer","location":"hass/io.github.aeckar.hass/-output-serializer/index.html","searchKeys":["OutputSerializer","class OutputSerializer : Serializer, Closeable, Flushable","io.github.aeckar.hass.OutputSerializer"]},{"name":"class ProtocolBuilder<T : Any>(classRef: Type)","description":"io.github.aeckar.hass.ProtocolBuilder","location":"hass/io.github.aeckar.hass/-protocol-builder/index.html","searchKeys":["ProtocolBuilder","class ProtocolBuilder<T : Any>(classRef: Type)","io.github.aeckar.hass.ProtocolBuilder"]},{"name":"class Schema","description":"io.github.aeckar.hass.Schema","location":"hass/io.github.aeckar.hass/-schema/index.html","searchKeys":["Schema","class Schema","io.github.aeckar.hass.Schema"]},{"name":"class SchemaBuilder","description":"io.github.aeckar.hass.SchemaBuilder","location":"hass/io.github.aeckar.hass/-schema-builder/index.html","searchKeys":["SchemaBuilder","class SchemaBuilder","io.github.aeckar.hass.SchemaBuilder"]},{"name":"class TypeFlagMismatchException : IOException","description":"io.github.aeckar.hass.TypeFlagMismatchException","location":"hass/io.github.aeckar.hass/-type-flag-mismatch-exception/index.html","searchKeys":["TypeFlagMismatchException","class TypeFlagMismatchException : IOException","io.github.aeckar.hass.TypeFlagMismatchException"]},{"name":"constructor(classRef: Type)","description":"io.github.aeckar.hass.ProtocolBuilder.ProtocolBuilder","location":"hass/io.github.aeckar.hass/-protocol-builder/-protocol-builder.html","searchKeys":["ProtocolBuilder","constructor(classRef: Type)","io.github.aeckar.hass.ProtocolBuilder.ProtocolBuilder"]},{"name":"fun <E> List<E>.asMutableList(): MutableList<E>","description":"io.github.aeckar.hass.CollectionDeserializer.asMutableList","location":"hass/io.github.aeckar.hass/-collection-deserializer/as-mutable-list.html","searchKeys":["asMutableList","fun <E> List<E>.asMutableList(): MutableList<E>","io.github.aeckar.hass.CollectionDeserializer.asMutableList"]},{"name":"fun <E> Set<E>.asMutableSet(): MutableSet<E>","description":"io.github.aeckar.hass.CollectionDeserializer.asMutableSet","location":"hass/io.github.aeckar.hass/-collection-deserializer/as-mutable-set.html","searchKeys":["asMutableSet","fun <E> Set<E>.asMutableSet(): MutableSet<E>","io.github.aeckar.hass.CollectionDeserializer.asMutableSet"]},{"name":"fun <K, V> Map<K, V>.asMutableMap(): MutableMap<K, V>","description":"io.github.aeckar.hass.CollectionDeserializer.asMutableMap","location":"hass/io.github.aeckar.hass/-collection-deserializer/as-mutable-map.html","searchKeys":["asMutableMap","fun <K, V> Map<K, V>.asMutableMap(): MutableMap<K, V>","io.github.aeckar.hass.CollectionDeserializer.asMutableMap"]},{"name":"fun InputStream.deserializer(protocols: Schema): InputDeserializer","description":"io.github.aeckar.hass.deserializer","location":"hass/io.github.aeckar.hass/deserializer.html","searchKeys":["deserializer","fun InputStream.deserializer(protocols: Schema): InputDeserializer","io.github.aeckar.hass.deserializer"]},{"name":"fun OutputStream.serializer(protocols: Schema): OutputSerializer","description":"io.github.aeckar.hass.serializer","location":"hass/io.github.aeckar.hass/serializer.html","searchKeys":["serializer","fun OutputStream.serializer(protocols: Schema): OutputSerializer","io.github.aeckar.hass.serializer"]},{"name":"fun Serializer.write(vararg objs: Any?)","description":"io.github.aeckar.hass.write","location":"hass/io.github.aeckar.hass/write.html","searchKeys":["write","fun Serializer.write(vararg objs: Any?)","io.github.aeckar.hass.write"]},{"name":"fun deepHashCode(): Int","description":"io.github.aeckar.hass.Schema.deepHashCode","location":"hass/io.github.aeckar.hass/-schema/deep-hash-code.html","searchKeys":["deepHashCode","fun deepHashCode(): Int","io.github.aeckar.hass.Schema.deepHashCode"]},{"name":"fun interface ReadOperation<out T> : Serializable","description":"io.github.aeckar.hass.ReadOperation","location":"hass/io.github.aeckar.hass/-read-operation/index.html","searchKeys":["ReadOperation","fun interface ReadOperation<out T> : Serializable","io.github.aeckar.hass.ReadOperation"]},{"name":"fun interface WriteOperation<in T> : Serializable","description":"io.github.aeckar.hass.WriteOperation","location":"hass/io.github.aeckar.hass/-write-operation/index.html","searchKeys":["WriteOperation","fun interface WriteOperation<in T> : Serializable","io.github.aeckar.hass.WriteOperation"]},{"name":"fun read(readOperation: ReadOperation<T>)","description":"io.github.aeckar.hass.ProtocolBuilder.read","location":"hass/io.github.aeckar.hass/-protocol-builder/read.html","searchKeys":["read","fun read(readOperation: ReadOperation<T>)","io.github.aeckar.hass.ProtocolBuilder.read"]},{"name":"fun write(writeOperation: WriteOperation<T>)","description":"io.github.aeckar.hass.ProtocolBuilder.write","location":"hass/io.github.aeckar.hass/-protocol-builder/write.html","searchKeys":["write","fun write(writeOperation: WriteOperation<T>)","io.github.aeckar.hass.ProtocolBuilder.write"]},{"name":"infix fun from(other: Schema)","description":"io.github.aeckar.hass.SchemaBuilder.ImportStatement.from","location":"hass/io.github.aeckar.hass/-schema-builder/-import-statement/from.html","searchKeys":["from","infix fun from(other: Schema)","io.github.aeckar.hass.SchemaBuilder.ImportStatement.from"]},{"name":"infix fun read(readOperation: ReadOperation<T>)","description":"io.github.aeckar.hass.ProtocolBuilder.DefaultOperation.read","location":"hass/io.github.aeckar.hass/-protocol-builder/-default-operation/read.html","searchKeys":["read","infix fun read(readOperation: ReadOperation<T>)","io.github.aeckar.hass.ProtocolBuilder.DefaultOperation.read"]},{"name":"infix fun read(readOperation: ReadOperation<T>)","description":"io.github.aeckar.hass.ProtocolBuilder.FallbackModifier.read","location":"hass/io.github.aeckar.hass/-protocol-builder/-fallback-modifier/read.html","searchKeys":["read","infix fun read(readOperation: ReadOperation<T>)","io.github.aeckar.hass.ProtocolBuilder.FallbackModifier.read"]},{"name":"infix fun write(writeOperation: WriteOperation<T>)","description":"io.github.aeckar.hass.ProtocolBuilder.DefaultOperation.write","location":"hass/io.github.aeckar.hass/-protocol-builder/-default-operation/write.html","searchKeys":["write","infix fun write(writeOperation: WriteOperation<T>)","io.github.aeckar.hass.ProtocolBuilder.DefaultOperation.write"]},{"name":"infix fun write(writeOperation: WriteOperation<T>)","description":"io.github.aeckar.hass.ProtocolBuilder.StaticModifier.write","location":"hass/io.github.aeckar.hass/-protocol-builder/-static-modifier/write.html","searchKeys":["write","infix fun write(writeOperation: WriteOperation<T>)","io.github.aeckar.hass.ProtocolBuilder.StaticModifier.write"]},{"name":"inline fun <T : Any> define(builder: ProtocolBuilder<T>.() -> Unit)","description":"io.github.aeckar.hass.SchemaBuilder.define","location":"hass/io.github.aeckar.hass/-schema-builder/define.html","searchKeys":["define","inline fun <T : Any> define(builder: ProtocolBuilder<T>.() -> Unit)","io.github.aeckar.hass.SchemaBuilder.define"]},{"name":"inline fun <T : Any> supertype(): Deserializer","description":"io.github.aeckar.hass.ObjectDeserializer.supertype","location":"hass/io.github.aeckar.hass/-object-deserializer/supertype.html","searchKeys":["supertype","inline fun <T : Any> supertype(): Deserializer","io.github.aeckar.hass.ObjectDeserializer.supertype"]},{"name":"inline fun schema(threadSafe: Boolean = true, builder: SchemaBuilder.() -> Unit): Schema","description":"io.github.aeckar.hass.schema","location":"hass/io.github.aeckar.hass/schema.html","searchKeys":["schema","inline fun schema(threadSafe: Boolean = true, builder: SchemaBuilder.() -> Unit): Schema","io.github.aeckar.hass.schema"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.aeckar.hass.Schema.equals","location":"hass/io.github.aeckar.hass/-schema/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","io.github.aeckar.hass.Schema.equals"]},{"name":"open override fun <K : Any, V : Any> write(entry: Map.Entry<K, V>)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun <K : Any, V : Any> write(entry: Map.Entry<K, V>)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun <K : Any, V : Any> write(map: Map<K, V>)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun <K : Any, V : Any> write(map: Map<K, V>)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun <T : Any> write(array: Array<out T>)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun <T : Any> write(array: Array<out T>)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun <T : Any> write(iter: Iterable<T>)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun <T : Any> write(iter: Iterable<T>)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun <T : Any> write(list: List<T>)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun <T : Any> write(list: List<T>)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun <T : Any> write(pair: Pair<T, T>)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun <T : Any> write(pair: Pair<T, T>)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun <T : Any> write(triple: Triple<T, T, T>)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun <T : Any> write(triple: Triple<T, T, T>)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun <T> read(): T","description":"io.github.aeckar.hass.InputDeserializer.read","location":"hass/io.github.aeckar.hass/-input-deserializer/read.html","searchKeys":["read","open override fun <T> read(): T","io.github.aeckar.hass.InputDeserializer.read"]},{"name":"open override fun close()","description":"io.github.aeckar.hass.InputDeserializer.close","location":"hass/io.github.aeckar.hass/-input-deserializer/close.html","searchKeys":["close","open override fun close()","io.github.aeckar.hass.InputDeserializer.close"]},{"name":"open override fun close()","description":"io.github.aeckar.hass.OutputSerializer.close","location":"hass/io.github.aeckar.hass/-output-serializer/close.html","searchKeys":["close","open override fun close()","io.github.aeckar.hass.OutputSerializer.close"]},{"name":"open override fun flush()","description":"io.github.aeckar.hass.OutputSerializer.flush","location":"hass/io.github.aeckar.hass/-output-serializer/flush.html","searchKeys":["flush","open override fun flush()","io.github.aeckar.hass.OutputSerializer.flush"]},{"name":"open override fun hashCode(): Int","description":"io.github.aeckar.hass.Schema.hashCode","location":"hass/io.github.aeckar.hass/-schema/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","io.github.aeckar.hass.Schema.hashCode"]},{"name":"open override fun readBoolean(): Boolean","description":"io.github.aeckar.hass.InputDeserializer.readBoolean","location":"hass/io.github.aeckar.hass/-input-deserializer/read-boolean.html","searchKeys":["readBoolean","open override fun readBoolean(): Boolean","io.github.aeckar.hass.InputDeserializer.readBoolean"]},{"name":"open override fun readByte(): Byte","description":"io.github.aeckar.hass.InputDeserializer.readByte","location":"hass/io.github.aeckar.hass/-input-deserializer/read-byte.html","searchKeys":["readByte","open override fun readByte(): Byte","io.github.aeckar.hass.InputDeserializer.readByte"]},{"name":"open override fun readChar(): Char","description":"io.github.aeckar.hass.InputDeserializer.readChar","location":"hass/io.github.aeckar.hass/-input-deserializer/read-char.html","searchKeys":["readChar","open override fun readChar(): Char","io.github.aeckar.hass.InputDeserializer.readChar"]},{"name":"open override fun readDouble(): Double","description":"io.github.aeckar.hass.InputDeserializer.readDouble","location":"hass/io.github.aeckar.hass/-input-deserializer/read-double.html","searchKeys":["readDouble","open override fun readDouble(): Double","io.github.aeckar.hass.InputDeserializer.readDouble"]},{"name":"open override fun readFloat(): Float","description":"io.github.aeckar.hass.InputDeserializer.readFloat","location":"hass/io.github.aeckar.hass/-input-deserializer/read-float.html","searchKeys":["readFloat","open override fun readFloat(): Float","io.github.aeckar.hass.InputDeserializer.readFloat"]},{"name":"open override fun readInt(): Int","description":"io.github.aeckar.hass.InputDeserializer.readInt","location":"hass/io.github.aeckar.hass/-input-deserializer/read-int.html","searchKeys":["readInt","open override fun readInt(): Int","io.github.aeckar.hass.InputDeserializer.readInt"]},{"name":"open override fun readLong(): Long","description":"io.github.aeckar.hass.InputDeserializer.readLong","location":"hass/io.github.aeckar.hass/-input-deserializer/read-long.html","searchKeys":["readLong","open override fun readLong(): Long","io.github.aeckar.hass.InputDeserializer.readLong"]},{"name":"open override fun readShort(): Short","description":"io.github.aeckar.hass.InputDeserializer.readShort","location":"hass/io.github.aeckar.hass/-input-deserializer/read-short.html","searchKeys":["readShort","open override fun readShort(): Short","io.github.aeckar.hass.InputDeserializer.readShort"]},{"name":"open override fun write(obj: Any?)","description":"io.github.aeckar.hass.OutputSerializer.write","location":"hass/io.github.aeckar.hass/-output-serializer/write.html","searchKeys":["write","open override fun write(obj: Any?)","io.github.aeckar.hass.OutputSerializer.write"]},{"name":"open override fun writeBoolean(cond: Boolean)","description":"io.github.aeckar.hass.OutputSerializer.writeBoolean","location":"hass/io.github.aeckar.hass/-output-serializer/write-boolean.html","searchKeys":["writeBoolean","open override fun writeBoolean(cond: Boolean)","io.github.aeckar.hass.OutputSerializer.writeBoolean"]},{"name":"open override fun writeByte(b: Byte)","description":"io.github.aeckar.hass.OutputSerializer.writeByte","location":"hass/io.github.aeckar.hass/-output-serializer/write-byte.html","searchKeys":["writeByte","open override fun writeByte(b: Byte)","io.github.aeckar.hass.OutputSerializer.writeByte"]},{"name":"open override fun writeChar(c: Char)","description":"io.github.aeckar.hass.OutputSerializer.writeChar","location":"hass/io.github.aeckar.hass/-output-serializer/write-char.html","searchKeys":["writeChar","open override fun writeChar(c: Char)","io.github.aeckar.hass.OutputSerializer.writeChar"]},{"name":"open override fun writeDouble(n: Double)","description":"io.github.aeckar.hass.OutputSerializer.writeDouble","location":"hass/io.github.aeckar.hass/-output-serializer/write-double.html","searchKeys":["writeDouble","open override fun writeDouble(n: Double)","io.github.aeckar.hass.OutputSerializer.writeDouble"]},{"name":"open override fun writeFloat(n: Float)","description":"io.github.aeckar.hass.OutputSerializer.writeFloat","location":"hass/io.github.aeckar.hass/-output-serializer/write-float.html","searchKeys":["writeFloat","open override fun writeFloat(n: Float)","io.github.aeckar.hass.OutputSerializer.writeFloat"]},{"name":"open override fun writeInt(n: Int)","description":"io.github.aeckar.hass.OutputSerializer.writeInt","location":"hass/io.github.aeckar.hass/-output-serializer/write-int.html","searchKeys":["writeInt","open override fun writeInt(n: Int)","io.github.aeckar.hass.OutputSerializer.writeInt"]},{"name":"open override fun writeLong(n: Long)","description":"io.github.aeckar.hass.OutputSerializer.writeLong","location":"hass/io.github.aeckar.hass/-output-serializer/write-long.html","searchKeys":["writeLong","open override fun writeLong(n: Long)","io.github.aeckar.hass.OutputSerializer.writeLong"]},{"name":"open override fun writeShort(n: Short)","description":"io.github.aeckar.hass.OutputSerializer.writeShort","location":"hass/io.github.aeckar.hass/-output-serializer/write-short.html","searchKeys":["writeShort","open override fun writeShort(n: Short)","io.github.aeckar.hass.OutputSerializer.writeShort"]},{"name":"operator fun plus(other: Schema): Schema","description":"io.github.aeckar.hass.Schema.plus","location":"hass/io.github.aeckar.hass/-schema/plus.html","searchKeys":["plus","operator fun plus(other: Schema): Schema","io.github.aeckar.hass.Schema.plus"]},{"name":"sealed class CollectionDeserializer : Deserializer","description":"io.github.aeckar.hass.CollectionDeserializer","location":"hass/io.github.aeckar.hass/-collection-deserializer/index.html","searchKeys":["CollectionDeserializer","sealed class CollectionDeserializer : Deserializer","io.github.aeckar.hass.CollectionDeserializer"]},{"name":"sealed interface Deserializer","description":"io.github.aeckar.hass.Deserializer","location":"hass/io.github.aeckar.hass/-deserializer/index.html","searchKeys":["Deserializer","sealed interface Deserializer","io.github.aeckar.hass.Deserializer"]},{"name":"sealed interface Serializer","description":"io.github.aeckar.hass.Serializer","location":"hass/io.github.aeckar.hass/-serializer/index.html","searchKeys":["Serializer","sealed interface Serializer","io.github.aeckar.hass.Serializer"]},{"name":"val default: ProtocolBuilder.DefaultOperation<T>","description":"io.github.aeckar.hass.ProtocolBuilder.default","location":"hass/io.github.aeckar.hass/-protocol-builder/default.html","searchKeys":["default","val default: ProtocolBuilder.DefaultOperation<T>","io.github.aeckar.hass.ProtocolBuilder.default"]},{"name":"val fallback: ProtocolBuilder.FallbackModifier<T>","description":"io.github.aeckar.hass.ProtocolBuilder.fallback","location":"hass/io.github.aeckar.hass/-protocol-builder/fallback.html","searchKeys":["fallback","val fallback: ProtocolBuilder.FallbackModifier<T>","io.github.aeckar.hass.ProtocolBuilder.fallback"]},{"name":"val import: SchemaBuilder.ImportStatement","description":"io.github.aeckar.hass.SchemaBuilder.import","location":"hass/io.github.aeckar.hass/-schema-builder/import.html","searchKeys":["import","val import: SchemaBuilder.ImportStatement","io.github.aeckar.hass.SchemaBuilder.import"]},{"name":"val isThreadSafe: Boolean","description":"io.github.aeckar.hass.Schema.isThreadSafe","location":"hass/io.github.aeckar.hass/-schema/is-thread-safe.html","searchKeys":["isThreadSafe","val isThreadSafe: Boolean","io.github.aeckar.hass.Schema.isThreadSafe"]},{"name":"val static: ProtocolBuilder.StaticModifier<T>","description":"io.github.aeckar.hass.ProtocolBuilder.static","location":"hass/io.github.aeckar.hass/-protocol-builder/static.html","searchKeys":["static","val static: ProtocolBuilder.StaticModifier<T>","io.github.aeckar.hass.ProtocolBuilder.static"]},{"name":"val superclass: Deserializer","description":"io.github.aeckar.hass.ObjectDeserializer.superclass","location":"hass/io.github.aeckar.hass/-object-deserializer/superclass.html","searchKeys":["superclass","val superclass: Deserializer","io.github.aeckar.hass.ObjectDeserializer.superclass"]},{"name":"value class DefaultOperation<T : Any>","description":"io.github.aeckar.hass.ProtocolBuilder.DefaultOperation","location":"hass/io.github.aeckar.hass/-protocol-builder/-default-operation/index.html","searchKeys":["DefaultOperation","value class DefaultOperation<T : Any>","io.github.aeckar.hass.ProtocolBuilder.DefaultOperation"]},{"name":"value class FallbackModifier<T : Any>","description":"io.github.aeckar.hass.ProtocolBuilder.FallbackModifier","location":"hass/io.github.aeckar.hass/-protocol-builder/-fallback-modifier/index.html","searchKeys":["FallbackModifier","value class FallbackModifier<T : Any>","io.github.aeckar.hass.ProtocolBuilder.FallbackModifier"]},{"name":"value class ImportStatement","description":"io.github.aeckar.hass.SchemaBuilder.ImportStatement","location":"hass/io.github.aeckar.hass/-schema-builder/-import-statement/index.html","searchKeys":["ImportStatement","value class ImportStatement","io.github.aeckar.hass.SchemaBuilder.ImportStatement"]},{"name":"value class StaticModifier<T : Any>","description":"io.github.aeckar.hass.ProtocolBuilder.StaticModifier","location":"hass/io.github.aeckar.hass/-protocol-builder/-static-modifier/index.html","searchKeys":["StaticModifier","value class StaticModifier<T : Any>","io.github.aeckar.hass.ProtocolBuilder.StaticModifier"]}]
